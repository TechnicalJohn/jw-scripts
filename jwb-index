#!/usr/bin/env python3
import os
import time
from sys import stderr

from jwlib.arguments import DefaultArgumentParser, disk_usage_info, action_factory
from jwlib.parse import parse_broadcasting
from jwlib.download import download_all
from jwlib.output import create_output

parser = DefaultArgumentParser(prog='jwb-index',
                               usage='%(prog)s [options] [DIR]',
                               description='Index or download media from tv.jw.org')

# The commented out options would only be valid with a --config file
parser.add_default_arguments(['--quiet',
                              '--mode',
                              '--lang',
                              '--languages',
                              '--quality',
                              '--subtitles',
                              # '--no-subtitles',
                              '--download',
                              # '--checksum',
                              '--no-checksum',
                              '--no-warning',
                              '--free',
                              'work_dir'])
# TODO
# parser.add_argument('--config')
parser.add_argument('--category', '-c',
                    default='VideoOnDemand',
                    action=action_factory(lambda x: tuple(x.split(','))),
                    dest='include_categories',
                    help='comma separated list of categories to index',
                    metavar='CODE')
parser.add_argument('--exclude',
                    metavar='CODE',
                    dest='exclude_categories',
                    action=action_factory(lambda x: tuple(x.split(','))),
                    help='comma separated list of categories to exclude from download')
parser.add_argument('--latest',
                    action='store_const',
                    const=['LatestVideos'],
                    dest='include_categories',
                    help='index the "Latest Videos" section')
parser.add_argument('--since',
                    metavar='YYYY-MM-DD',
                    dest='min_date',
                    action=action_factory(lambda x: time.mktime(time.strptime(x, '%Y-%m-%d'))),
                    help='only index media newer than this date')
parser.add_argument('--limit-rate',
                    default='1M',
                    dest='rate_limit',
                    help='maximum download rate, passed to curl (0 = no limit)')
parser.add_argument('--curl-path',
                    default='curl',
                    metavar='PATH',
                    help='path to the curl binary')
parser.add_argument('--no-curl',
                    action='store_const',
                    const=None,
                    dest='curl_path',
                    help='use urllib instead of external curl (compatibility)')
parser.add_argument('--clean-symlinks',
                    action='store_true',
                    dest='clean_all_symlinks',
                    help='remove all old symlinks (only valid with --mode=filesystem)')
parser.add_argument('--ntfs',
                    action='store_true',
                    dest='safe_filenames',
                    help='remove special characters from file names (NTFS/FAT compatibility)')
settings = parser.parse_args()

if not settings.mode and not settings.download:
    print('please use --mode or --download', file=stderr)
    exit(1)

# Warning if disk space is already below limit
if settings.download and settings.keep_free > 0:
    disk_usage_info(settings)

# Do the indexing
data = parse_broadcasting(settings)
if not data:
    exit()

if settings.mode not in (None, 'stdout'):
    settings.sub_dir = 'jwb-' + settings.lang

if settings.download:
    download_all(settings, data)

if settings.mode:
    create_output(settings, data, stdout_uniq=True)
