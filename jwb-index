#!/usr/bin/env python3
import argparse
import os
from sys import stderr

from jwlib.arguments import disk_usage_info, add_arguments
from jwlib.parse import JWBroadcasting
import jwlib.output as jo


parser = argparse.ArgumentParser(prog='jwb-index',
                                 usage='%(prog)s [options] [DIR]',
                                 description='Index or download media from tv.jw.org')

add_arguments(parser, ['--quiet',
                       '--mode',
                       '--lang',
                       '--quality',
                       '--subtitles',
                       '--no-subtitles',
                       '--download',
                       '--limit-rate',
                       '--checksum',
                       '--no-checksum',
                       '--no-warning'
                       '--free'
                       'work_dir'])
# TODO
# parser.add_argument('--config')
parser.add_argument('--category',
                    dest='index_category',
                    help='comma separated list of categories to index',
                    metavar='CODE')
parser.add_argument('--exclude',
                    dest='exclude_category',
                    metavar='CODE',
                    help='comma separated list of categories to exclude from download')
parser.add_argument('--latest',
                    action='store_const',
                    const='LatestVideos',
                    dest='index_category',
                    help='index the "Latest Videos" section')
parser.add_argument('--since',
                    metavar='YYYY-MM-DD',
                    help='only index media newer than this date')

jwb = JWBroadcasting()
# Default values, not set by JWBroadcasting
jwb.work_dir = '.'
jwb.mode = None
jwb.warn = False
jwb.exclude_category = 'VODSJJMeetings'
parser.parse_args(namespace=jwb)

wd = jwb.work_dir
subdir = 'jwb-' + jwb.lang
mode = jwb.mode

if not mode and not jwb.download:
    print('please use --mode or --download', file=stderr)
    exit(1)

if not mode or mode == 'stdout':
    subdir = ''

if jwb.keep_free and jwb.keep_free > 0:
    jwb.keep_free = jwb.keep_free * 1000 ** 2  # MB to B
    disk_usage_info(wd, jwb.keep_free, warn=jwb.warn, quiet=jwb.quiet)

r = jwb.parse()
jwb.download_all(os.path.join(wd, subdir))

if not mode:
    pass
elif mode == 'stdout':
    jo.output_stdout(r, wd, uniq=True)
elif mode == 'm3u':
    jo.output_m3u(r, wd, subdir)
elif mode == 'm3ucompat':
    jo.output_m3u(r, wd, subdir, flat=True)
elif mode == 'filesystem':
    jo.clean_symlinks(os.path.join(wd, subdir))
    jo.output_filesystem(r, wd, subdir)
elif mode == 'html':
    jo.output_html(r, wd, subdir)
