#!/usr/bin/env python3
import time
import subprocess
import argparse
import jwlib.arguments
import jwlib.parse
import jwlib.output


parser = argparse.ArgumentParser(prog='jwb-stream.py',
                                 usage='%(prog)s [options] COMMAND [ARGUMENTS]',
                                 description='Stream media from tv.jw.org')

jwlib.arguments.add_arguments(parser, ['--lang',
                                       '--quality',
                                       '--subtitles',
                                       '--no-subtitles'])
# TODO
# parser.add_argument('--config')
parser.add_argument('--channel',
                    default='OurStudio',
                    dest='channel',
                    choices=['OurStudio', 'Children', 'Teenagers', 'Family', 'ProgramEvents', 'OurActivities',
                             'Ministry', 'OurOrganization', 'Bible', 'Movies', 'MusicVideo', 'IntExp'],
                    help='channel to stream')
parser.add_argument('_cmd',
                    nargs=argparse.REMAINDER,
                    metavar='COMMAND',
                    help='video player command, "{}" gets replaced by starting position in secs')

jwb = jwlib.parse.JWBroadcasting()
parser.parse_args(namespace=jwb)

jwb.streaming = True
jwb.quiet = 1
jwb.utc_offset = (-time.altzone // 60)
jwb.category = 'Streaming' + jwb.channel  # set by argparse
cmd = jwb.cmd

if not cmd:
    raise RuntimeError("Not enough arguments")

# Replace the occurrences of `{}` with `0` in the command
cmd = [arg.replace('{}', '0') for arg in cmd]

first = True
while True:

    result = jwb.parse()
    queue = [item.url for cat in result for item in cat if not item.iscategory]

    if first:
        # Replace {} with starting position in command
        cmd_first = [arg.replace('{}', str(jwb.position)) for arg in cmd]
        # Run command with first URL as argument
        subprocess.run(cmd_first + [queue.pop(0)], check=True)
        first = False

    # Run command with all URLs as arguments
    subprocess.run(cmd + queue, check=True)
